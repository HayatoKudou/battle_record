[{"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/Main.js":"1","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/Register.js":"2","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/parts/header.js":"3","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/common.js":"4","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/index.js":"5","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/Auth.js":"6","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/Login.js":"7","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/Reset.js":"8","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/reportWebVitals.js":"9","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/webpush.js":"10","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/page/contact.js":"11","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/page/BulletinBoard.js":"12","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/User.js":"13","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/App.js":"14","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/parts/TabPanel.js":"15","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/parts/SideList.js":"16","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/page/apex/Update.js":"17","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/page/apex/Charactor.js":"18"},{"size":2999,"mtime":1612010224151,"results":"19","hashOfConfig":"20"},{"size":10063,"mtime":1611998308279,"results":"21","hashOfConfig":"20"},{"size":11199,"mtime":1612023005171,"results":"22","hashOfConfig":"20"},{"size":1220,"mtime":1611900763788,"results":"23","hashOfConfig":"20"},{"size":558,"mtime":1612020844786,"results":"24","hashOfConfig":"20"},{"size":210,"mtime":1610864223876,"results":"25","hashOfConfig":"20"},{"size":5198,"mtime":1611998299029,"results":"26","hashOfConfig":"20"},{"size":5263,"mtime":1611998313743,"results":"27","hashOfConfig":"20"},{"size":362,"mtime":1610818340760,"results":"28","hashOfConfig":"20"},{"size":603,"mtime":1611883523950,"results":"29","hashOfConfig":"20"},{"size":4157,"mtime":1611998273747,"results":"30","hashOfConfig":"20"},{"size":31323,"mtime":1611995115693,"results":"31","hashOfConfig":"20"},{"size":705,"mtime":1611901379558,"results":"32","hashOfConfig":"20"},{"size":530,"mtime":1610859796857,"results":"33","hashOfConfig":"20"},{"size":391,"mtime":1612001660695,"results":"34","hashOfConfig":"20"},{"size":2265,"mtime":1612006506925,"results":"35","hashOfConfig":"20"},{"size":2406,"mtime":1612022491535,"results":"36","hashOfConfig":"20"},{"size":18446,"mtime":1612087019159,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"add4b",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/Main.js",["79","80","81"],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/Register.js",["82"],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/parts/header.js",[],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/common.js",[],["83","84"],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/index.js",[],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/Auth.js",[],["85","86"],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/Login.js",["87"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport User from './User';\nimport { serverUrl, copyright } from '../../common';\nimport Header from '../parts/header';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n\treturn (\n\t\t<Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n\t\t\t{'Copyright © '}\n\t\t\t<Link color=\"inherit\" href=\"https://material-ui.com/\">\n                {copyright}\n            </Link>{' '}\n\t\t\t{new Date().getFullYear()}\n\t\t\t{'.'}\n\t\t</Typography>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing(8),\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: '100%', // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(1),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nexport default function Login() {\n\n    const history = useHistory();\n\tconst classes = useStyles();\n    const { register, handleSubmit, errors } = useForm();\n    const [error, set_error] = useState('');\n\n    function setLogin(argument) {\n        var data = {\n            email: argument.email,\n            password: argument.password,\n        }\n        fetch(serverUrl + '/api/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n        .then(response => {\n            if (!response.ok) {\n                set_error('ユーザーが見つかりません');\n            } else {\n                return response.json().then(userInfo => {\n                    if('errors' in userInfo){\n                        set_error(userInfo.errors);\n                    } else {\n                        User.setArr('user', userInfo.user);\n                        User.login();\n                        history.push('/', {articles: userInfo.articles});\n                    }\n                });\n            }\n        }).catch(error => {\n            console.error(error);\n        });\n    }\n\n\treturn (\n        <div>\n            {/* <Header /> */}\n    \t\t<Container component=\"main\" maxWidth=\"xs\">\n    \t\t\t<CssBaseline />\n    \t\t\t<div className={classes.paper}>\n    \t\t\t\t<Avatar className={classes.avatar}>\n    \t\t\t\t\t<LockOutlinedIcon />\n    \t\t\t\t</Avatar>\n    \t\t\t\t<Typography component=\"h1\" variant=\"h5\">ログイン</Typography>\n                    {error !== '' && (\n                        <Typography color=\"error\">{error}</Typography>\n                    )}\n    \t\t\t\t<form onSubmit={handleSubmit(setLogin)} className=\"player_name_form\">\n    \t\t\t\t\t<TextField\n    \t\t\t\t\t\tvariant=\"outlined\"\n    \t\t\t\t\t\tmargin=\"normal\"\n    \t\t\t\t\t\trequired\n    \t\t\t\t\t\tfullWidth\n    \t\t\t\t\t\tid=\"email\"\n    \t\t\t\t\t\tlabel=\"メールアドレス\"\n    \t\t\t\t\t\tname=\"email\"\n    \t\t\t\t\t\tautoComplete=\"email\"\n    \t\t\t\t\t\tautoFocus\n    \t\t\t\t\t\terror={errors.email || error !== '' ? true : false}\n    \t\t\t\t\t\tinputRef={register({ required: true })}\n    \t\t\t\t\t\thelperText={\n    \t\t\t\t\t\t\terrors.email && <span>メールアドレスを入力してください。</span>\n    \t\t\t\t\t\t}\n    \t\t\t\t\t/>\n    \t\t\t\t\t<TextField\n    \t\t\t\t\t\tvariant=\"outlined\"\n    \t\t\t\t\t\tmargin=\"normal\"\n    \t\t\t\t\t\trequired\n    \t\t\t\t\t\tfullWidth\n    \t\t\t\t\t\tname=\"password\"\n    \t\t\t\t\t\tlabel=\"パスワード\"\n    \t\t\t\t\t\ttype=\"password\"\n    \t\t\t\t\t\tid=\"password\"\n    \t\t\t\t\t\tautoComplete=\"current-password\"\n    \t\t\t\t\t\terror={errors.password || error !== '' ? true : false}\n    \t\t\t\t\t\tinputRef={register({ required: true })}\n    \t\t\t\t\t\thelperText={\n    \t\t\t\t\t\t\terrors.password && <span>メールアドレスを入力してください。</span>\n    \t\t\t\t\t\t}\n    \t\t\t\t\t/>\n    \t\t\t\t\t<FormControlLabel\n    \t\t\t\t\t\tcontrol={<Checkbox value=\"remember\" color=\"primary\" />}\n    \t\t\t\t\t\tlabel=\"パスワードを保存する\"\n    \t\t\t\t\t/>\n    \t\t\t\t\t<Button\n    \t\t\t\t\t\ttype=\"submit\"\n    \t\t\t\t\t\tfullWidth\n    \t\t\t\t\t\tvariant=\"contained\"\n    \t\t\t\t\t\tcolor=\"primary\"\n    \t\t\t\t\t\tclassName={classes.submit}\n    \t\t\t\t\t>ログイン\n    \t\t\t\t\t</Button>\n    \t\t\t\t\t<Grid container>\n    \t\t\t\t\t\t<Grid item xs>\n    \t\t\t\t\t\t\t<Link href=\"/reset\" variant=\"body2\">\n    \t\t\t\t\t\t\t\tパスワードを忘れた場合\n    \t\t\t\t\t\t\t</Link>\n    \t\t\t\t\t\t</Grid>\n    \t\t\t\t\t\t<Grid item>\n    \t\t\t\t\t\t\t<Link href=\"/register\" variant=\"body2\">\n    \t\t\t\t\t\t\t\tアカウントを作成する\n    \t\t\t\t\t\t\t</Link>\n    \t\t\t\t\t\t</Grid>\n    \t\t\t\t\t</Grid>\n    \t\t\t\t</form>\n    \t\t\t</div>\n    \t\t\t<Box mt={8}>\n    \t\t\t\t<Copyright />\n    \t\t\t</Box>\n    \t\t</Container>\n        </div>\n\t);\n}",["88","89"],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/Reset.js",["90","91","92","93","94"],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/reportWebVitals.js",[],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/webpush.js",[],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/page/contact.js",["95","96","97"],"import React, { useState, useMemo } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport Header from '../parts/header';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { serverUrl } from '../../common';\n\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    aleart: {\n        marginTop: '20px',\n    },\n    form: {\n        width: '80%',\n        margin: '0 auto',\n    },\n    form_input: {\n        width: '100%',\n        margin: '20px 0 0 0',\n    },\n    post_button: {\n        width: '100%',\n        margin: '20px 0 0 0',\n    },\n    error_message: {\n        fontSize: 17,\n        listStyle: 'none',\n        marginLeft: 30,\n        marginBottom: 15,\n        width: '100% !important',\n    },\n}));\n\nexport default function Contact(){\n\n    const { register, handleSubmit, errors, reset } = useForm();\n    const classes = useStyles();\n    const [error, set_error] = useState('');\n    const [success_aleart, set_success_aleart] = useState('');\n\n    function post(data){\n        if(window.confirm(\"送信しますか?\")){\n            fetch(serverUrl + '/api/contact', {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json',},\n                body: JSON.stringify(data),\n            })\n            .then(response => {\n                if (!response.ok) {\n                    set_error(response);\n                } else {\n                    return response.json().then(data => {\n                        console.log(data);\n                        if('errors' in data){\n                            set_error(data.errors);\n                            set_success_aleart('');\n                        } else {\n                            set_error('');\n                            set_success_aleart(data.message);\n                        }\n                    });\n                }\n            }).catch(error => {\n                set_error(error);\n            })\n        }\n    }\n\n    return(\n        <div>\n            {/* <Header /> */}\n            <form onSubmit={handleSubmit(post)} className={classes.form}>\n\n                {success_aleart !== '' && (\n    \t\t\t\t<Typography component=\"h1\" variant=\"h5\" className={classes.aleart}>\n                        <Alert severity=\"success\">{success_aleart}</Alert>                \n                    </Typography>\n                )}\n                {error !== '' && (\n                    <Typography color=\"error\" component=\"h1\" variant=\"h5\" className={classes.aleart}>\n                        {Object.keys(error).map(key => (\n                            <Alert key={key} severity=\"error\">{error[key]}</Alert>\n                        ))}\n                    </Typography>\n                )}\n\n                <TextField variant=\"outlined\" name=\"email\" size=\"small\" className={classes.form_input}\n                    error={errors.email ? true : false}\n                    inputRef={register({ pattern: /^[A-Za-z0-9]{1}[A-Za-z0-9_.-]*@{1}[A-Za-z0-9_.-]{1,}\\.[A-Za-z0-9]{1,}/ })}\n                    helperText={\n                        errors.email && <span className=\"error_message\">メールアドレスの形式が正しくありません。</span>\n                    }\n                    label={'メールアドレス(任意)'}\n                />\n                <TextField variant=\"outlined\" name=\"contents\" multiline rows={3} className={classes.form_input}\n                    error={errors.contents ? true : false}\n                    inputRef={register({ required: true })}\n                    helperText={\n                        errors.contents && <span className=\"error_message\">お問い合わせ内容を入力してください。</span>\n                    }\n                    label={'お問い合わせ内容'}\n                />\n\n                <Button onClick={handleSubmit(post)} className={classes.post_button} variant=\"contained\" color=\"primary\">\n                    送信する\n                </Button>\n            </form>\n        </div>\n    )\n}","/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/page/BulletinBoard.js",["98","99","100"],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/auth/User.js",[],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/App.js",[],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/parts/TabPanel.js",[],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/parts/SideList.js",[],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/page/apex/Update.js",["101","102"],"/Users/kudouhayato/Desktop/project/gamer-lab.net/src/component/page/apex/Charactor.js",["103","104","105","106"],{"ruleId":"107","severity":1,"message":"108","line":14,"column":8,"nodeType":"109","messageId":"110","endLine":14,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":18,"column":9,"nodeType":"109","messageId":"110","endLine":18,"endColumn":16},{"ruleId":"107","severity":1,"message":"112","line":19,"column":8,"nodeType":"109","messageId":"110","endLine":19,"endColumn":15},{"ruleId":"107","severity":1,"message":"113","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"107","severity":1,"message":"113","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":14},{"ruleId":"114","replacedBy":"120"},{"ruleId":"116","replacedBy":"121"},{"ruleId":"107","severity":1,"message":"113","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":14},{"ruleId":"107","severity":1,"message":"122","line":12,"column":8,"nodeType":"109","messageId":"110","endLine":12,"endColumn":24},{"ruleId":"107","severity":1,"message":"123","line":13,"column":8,"nodeType":"109","messageId":"110","endLine":13,"endColumn":16},{"ruleId":"107","severity":1,"message":"124","line":61,"column":11,"nodeType":"109","messageId":"110","endLine":61,"endColumn":18},{"ruleId":"107","severity":1,"message":"125","line":64,"column":19,"nodeType":"109","messageId":"110","endLine":64,"endColumn":28},{"ruleId":"107","severity":1,"message":"126","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":34},{"ruleId":"107","severity":1,"message":"113","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"127","line":39,"column":45,"nodeType":"109","messageId":"110","endLine":39,"endColumn":50},{"ruleId":"107","severity":1,"message":"128","line":6,"column":21,"nodeType":"109","messageId":"110","endLine":6,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":145,"column":8,"nodeType":"131","endLine":145,"endColumn":21,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":258,"column":21,"nodeType":"135","messageId":"136","endLine":258,"endColumn":23},{"ruleId":"107","severity":1,"message":"137","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"138","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":18},{"ruleId":"107","severity":1,"message":"137","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"138","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":31,"column":29,"nodeType":"141","endLine":31,"endColumn":62},{"ruleId":"139","severity":1,"message":"140","line":314,"column":33,"nodeType":"141","endLine":314,"endColumn":44},"no-unused-vars","'BulletinBoard' is defined but never used.","Identifier","unusedVar","'webpush' is defined but never used.","'Contact' is defined but never used.","'Header' is defined but never used.","no-native-reassign",["142"],"no-negated-in-lhs",["143"],["142"],["143"],["142"],["143"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'history' is assigned a value but never used.","'set_error' is assigned a value but never used.","'useMemo' is defined but never used.","'reset' is assigned a value but never used.","'dateFormat' is defined but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'filter'. Either include it or remove the dependency array.","ArrayExpression",["144"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Typography' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [filter]",{"range":"147","text":"148"},[4997,5010],"[filter]"]