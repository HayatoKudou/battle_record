[{"/Users/kudouhayato/Desktop/project/battle_record/src/reportWebVitals.js":"1","/Users/kudouhayato/Desktop/project/battle_record/src/index.js":"2","/Users/kudouhayato/Desktop/project/battle_record/src/component/App.js":"3","/Users/kudouhayato/Desktop/project/battle_record/src/component/Main.js":"4","/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/Login.js":"5","/Users/kudouhayato/Desktop/project/battle_record/src/component/parts/header.js":"6","/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/Auth.js":"7","/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/User.js":"8","/Users/kudouhayato/Desktop/project/battle_record/src/component/BulletinBoard.js":"9","/Users/kudouhayato/Desktop/project/battle_record/src/component/parts/UserSearch.js":"10","/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/Register.js":"11","/Users/kudouhayato/Desktop/project/battle_record/src/component/parts/platform.js":"12","/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/Reset.js":"13","/Users/kudouhayato/Desktop/project/battle_record/src/common.js":"14"},{"size":362,"mtime":1610818340760,"results":"15","hashOfConfig":"16"},{"size":536,"mtime":1611206996042,"results":"17","hashOfConfig":"16"},{"size":530,"mtime":1610859796857,"results":"18","hashOfConfig":"16"},{"size":2161,"mtime":1611722026801,"results":"19","hashOfConfig":"16"},{"size":4756,"mtime":1611663122771,"results":"20","hashOfConfig":"16"},{"size":9468,"mtime":1611735111224,"results":"21","hashOfConfig":"16"},{"size":210,"mtime":1610864223876,"results":"22","hashOfConfig":"16"},{"size":1040,"mtime":1611385742943,"results":"23","hashOfConfig":"16"},{"size":29973,"mtime":1611735851472,"results":"24","hashOfConfig":"16"},{"size":6045,"mtime":1611204316129,"results":"25","hashOfConfig":"16"},{"size":9441,"mtime":1611663129174,"results":"26","hashOfConfig":"16"},{"size":1851,"mtime":1611318585273,"results":"27","hashOfConfig":"16"},{"size":4997,"mtime":1611539442776,"results":"28","hashOfConfig":"16"},{"size":1010,"mtime":1611725173545,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"fn3zus",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kudouhayato/Desktop/project/battle_record/src/reportWebVitals.js",[],["63","64"],"/Users/kudouhayato/Desktop/project/battle_record/src/index.js",[],["65","66"],"/Users/kudouhayato/Desktop/project/battle_record/src/component/App.js",[],"/Users/kudouhayato/Desktop/project/battle_record/src/component/Main.js",[],"/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/Login.js",[],"/Users/kudouhayato/Desktop/project/battle_record/src/component/parts/header.js",[],"/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/Auth.js",[],["67","68"],"/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/User.js",[],"/Users/kudouhayato/Desktop/project/battle_record/src/component/BulletinBoard.js",["69","70","71"],"/Users/kudouhayato/Desktop/project/battle_record/src/component/parts/UserSearch.js",["72","73","74","75"],"import React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\n\nimport Header from './header';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default function UserSearch() {\n\n    const [selected_platform, set_selected_platform] = useState('playstation');\n    const [playerName, set_playerName] = useState('');\n    const [result_data, set_result_data] = useState('');\n    const [error_data, set_error_data] = useState('');\n\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    const useStyles = makeStyles((theme) => ({\n        selected_platform: {\n            backgroundColor: 'black',\n            borderRadius: 0,\n        },\n        margin: {\n            margin: theme.spacing(1),\n        },\n    }));\n    const classes = useStyles();\n\n    //ユーザー検索\n    function searchApexPlayer(argument){\n        var data = {\n            playerName: argument.player_name,\n        }\n        fetch('http://battle_record_api/api/searchApexPlayer', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        })\n        .then(response => response.json())\n        .then(data => {\n            if(data === 404){\n                set_error_data('ユーザーが見つかりませんでした。');\n            } else {\n                set_error_data('');\n                set_result_data(data);\n            }\n        }\n        )\n        .catch(error => set_error_data(error))\n    }\n\n    return(\n        <div>\n            <Header />\n\n            <div className=\"select_platform\">\n                <div className=\"select_platform_form\">\n                    <ul>\n                        <li className={selected_platform === 'steam' ? classes.selected_platform : ''}\n                            onClick={() => set_selected_platform('steam')}\n                        >\n                            <IconButton><i className=\"fab fa-steam\"></i></IconButton>\n                        </li>\n                        <li className={selected_platform === 'xbox' ? classes.selected_platform : ''}\n                            onClick={() => set_selected_platform('xbox')}\n                        >\n                            <IconButton><i className=\"fab fa-xbox\"></i></IconButton>\n                        </li>\n                        <li className={selected_platform === 'playstation' ? classes.selected_platform : ''}\n                            onClick={() => set_selected_platform('playstation')}\n                        >\n                            <IconButton><i className=\"fab fa-playstation\"></i></IconButton>\n                        </li>\n                    </ul>\n                    <form onSubmit={handleSubmit(searchApexPlayer)} className=\"player_name_form\">\n                        <TextField className=\"player_name_input\" variant=\"outlined\" name=\"player_name\"\n                            error={errors.player_name ? true : false}\n                            inputRef={register({ required: true })}\n                            helperText={\n                                error_data != '' ? <span>{error_data}</span> :\n                                errors.player_name && <span>プレイヤーIDを入力してください。</span>\n                            }\n                            label={\n                                selected_platform === 'playstation' ? 'playstation Network player Name' :\n                                selected_platform === 'xbox' ? 'Xbox Live player Name' : 'player Name'\n                            }\n                        />\n                    </form>\n                </div>\n            </div>\n\n            <div>\n                {result_data !== '' &&\n                    <div>\n                        <div className=\"userinfp\">\n                            <div className=\"user_avatar_info row\">\n                                <img className=\"user_avatar_image\" src={result_data.data.platformInfo.avatarUrl} alt=\"avatarUrl\" />\n                                {result_data.data.platformInfo.platformSlug === 'battlenet' &&\n                                    <i className={'fab fa-steam'}></i>}\n                                {result_data.data.platformInfo.platformSlug === 'xbl' &&\n                                    <i className={'fab fa-xbox'}></i>}\n                                {result_data.data.platformInfo.platformSlug === 'psn' &&\n                                    <i className={'fab fa-playstation'}></i>}\n                                <span>{result_data.data.platformInfo.platformUserId}</span>\n                            </div>\n\n                            <div className=\"user_apex_data row\">\n                                <span>{'Level: ' + result_data.data.segments[0].stats.level.displayValue}</span>\n                                <span>{'Kills: ' + result_data.data.segments[0].stats.kills.displayValue}</span>\n                                <span>{'Damage: ' + result_data.data.segments[0].stats.damage.displayValue}</span>\n                                <span>{'RankScore: ' + result_data.data.segments[0].stats.rankScore.displayValue}</span>\n                            </div>\n\n                            <div>\n                                {/* {Object.keys(result_data.data.segments).map(key => (\n                                    <div key={key}>\n                                        <img src={result_data.data.segments[key].metadata.imageUrl} alt=\"imageUrl\"/>\n                                        <h2>{result_data.data.segments[key].metadata.name}</h2>\n                                        <h2>{result_data.data.segments[key].stats.kills.displayValue}</h2>\n                                    </div>\n                                ))} */}\n                            </div>\n\n                        </div>\n                    </div>\n                }\n            </div>\n\n        </div>\n    )\n}",["76","77"],"/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/Register.js",[],"/Users/kudouhayato/Desktop/project/battle_record/src/component/parts/platform.js",[],"/Users/kudouhayato/Desktop/project/battle_record/src/component/auth/Reset.js",["78","79","80"],"/Users/kudouhayato/Desktop/project/battle_record/src/common.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"81","replacedBy":"87"},{"ruleId":"83","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":7,"column":9,"nodeType":"91","messageId":"92","endLine":7,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":140,"column":8,"nodeType":"95","endLine":140,"endColumn":21,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":252,"column":21,"nodeType":"99","messageId":"100","endLine":252,"endColumn":23},{"ruleId":"89","severity":1,"message":"101","line":13,"column":12,"nodeType":"91","messageId":"92","endLine":13,"endColumn":22},{"ruleId":"89","severity":1,"message":"102","line":13,"column":24,"nodeType":"91","messageId":"92","endLine":13,"endColumn":38},{"ruleId":"89","severity":1,"message":"103","line":17,"column":37,"nodeType":"91","messageId":"92","endLine":17,"endColumn":42},{"ruleId":"97","severity":1,"message":"98","line":83,"column":44,"nodeType":"99","messageId":"100","endLine":83,"endColumn":46},{"ruleId":"81","replacedBy":"104"},{"ruleId":"83","replacedBy":"105"},{"ruleId":"89","severity":1,"message":"106","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":24},{"ruleId":"89","severity":1,"message":"107","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":16},{"ruleId":"89","severity":1,"message":"108","line":55,"column":11,"nodeType":"91","messageId":"92","endLine":55,"endColumn":18},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],["109"],["110"],"no-unused-vars","'dateFormat' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'filter'. Either include it or remove the dependency array.","ArrayExpression",["111"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'playerName' is assigned a value but never used.","'set_playerName' is assigned a value but never used.","'watch' is assigned a value but never used.",["109"],["110"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [filter]",{"range":"114","text":"115"},[4734,4747],"[filter]"]